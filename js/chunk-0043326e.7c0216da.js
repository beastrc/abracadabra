(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0043326e"],{"4c41":function(e,t,n){"use strict";function r({mustBeMetaMask:e=!1,silent:t=!1,timeout:n=3e3}={}){o();let r=!1;return new Promise(o=>{function i(){if(r)return;r=!0,window.removeEventListener("ethereum#initialized",i);const{ethereum:n}=window;if(!n||e&&!n.isMetaMask){const r=e&&n?"Non-MetaMask window.ethereum detected.":"Unable to detect window.ethereum.";!t&&console.error("@metamask/detect-provider:",r),o(null)}else o(n)}window.ethereum?i():(window.addEventListener("ethereum#initialized",i,{once:!0}),setTimeout(()=>{i()},n))});function o(){if("boolean"!==typeof e)throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");if("boolean"!==typeof t)throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");if("number"!==typeof n)throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.")}}e.exports=r},e793:function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"metamask-checker"})},o=[],i=n("1da1"),s=(n("7db0"),n("b0c0"),n("96cf"),n("4c41")),c=n.n(s),a={data:function(){return{checkInProgress:!0}},computed:{availableNetworks:function(){return this.$store.getters.getAvailableNetworks},walletIsConnected:function(){return this.$store.getters.getWalletIsConnected},chainId:function(){return this.$store.getters.getChainId}},watch:{walletIsConnected:function(e){e&&!this.checkInProgress&&(this.compareNetworkSupport(this.chainId),this.setAccountListeners(),this.$emit("checkSuccess"))}},methods:{checkProvider:function(){var e=this;return Object(i["a"])(regeneratorRuntime.mark((function t(){var n,r,o;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,c()();case 2:if(n=t.sent,n){t.next=7;break}return e.$store.commit("setPopupState",{type:"browser",isShow:!0}),e.$emit("checkError","Please install MetaMask!"),t.abrupt("return",!1);case 7:if(n===window.ethereum){t.next=10;break}return e.$emit("checkError","Do you have multiple wallets installed?"),t.abrupt("return",!1);case 10:return r=new e.$ethers.providers.Web3Provider(window.ethereum),o=r.getSigner(),e.$store.commit("setMetamaskActive",!0),e.$store.commit("setProvider",r),e.$store.commit("setSigner",o),t.next=17,e.checkConnection();case 17:case"end":return t.stop()}}),t)})))()},checkConnection:function(){var e=this;return Object(i["a"])(regeneratorRuntime.mark((function t(){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$store.dispatch("fetchAccount",window.ethereum);case 2:if(n=t.sent,n){t.next=7;break}return e.$emit("checkError",""),e.checkInProgress=!1,t.abrupt("return",!1);case 7:return e.$store.commit("setWalletConnection",!0),t.next=10,e.$store.dispatch("fetchChainId",window.ethereum);case 10:r=t.sent,e.compareNetworkSupport(r),e.setAccountListeners(),e.checkInProgress=!1,e.$emit("checkSuccess");case 15:case"end":return t.stop()}}),t)})))()},compareNetworkSupport:function(e){var t=this.availableNetworks.find((function(t){return t.chainId===e}));if("0x1"!==e){this.$store.commit("setPopupState",{type:"wrong-network",isShow:!0});var n=this.$route.name;"Home"!==n&&this.$router.push({name:"Home"})}t&&this.$store.commit("setActiveNetwork",e)},setAccountListeners:function(){window.ethereum.on("chainChanged",this.onChainIdChange),window.ethereum.on("accountsChanged",this.onAccountChange)},onAccountChange:function(e){0===e.length?this.disconnectHandler():this.$store.commit("setAccount",e[0])},onChainIdChange:function(){window.location.reload()},disconnectHandler:function(){this.$store.commit("closePopups"),this.$store.commit("setAccount",null),this.$store.commit("setWalletConnection",!1),this.$store.commit("setChainId",null),this.$store.commit("setActiveNetwork","0x1"),this.$store.commit("setFarmPools",[]),this.$store.commit("setPools",[]),this.$store.commit("setSwapObject",null);var e=this.$route.name;"Home"!==e&&this.$router.push({name:"Home"}),this.$emit("checkError","Please connect to MetaMask.")}},created:function(){this.checkProvider()}},u=a,h=n("2877"),m=Object(h["a"])(u,r,o,!1,null,null,null);t["default"]=m.exports}}]);